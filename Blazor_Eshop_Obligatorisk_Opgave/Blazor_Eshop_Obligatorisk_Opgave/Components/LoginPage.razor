@page "/admin"
@inject NavigationManager navMan
@rendermode InteractiveServer
<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .login-form {
        max-width: 400px;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f9f9f9;
    }
</style>

<div class="login-container">
    <div class="login-form">
        <h1>Admin Login</h1>
        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" class="form-control" @bind="username" id="username" />
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" class="form-control" @bind="password" id="password" />
        </div>
        <button class="btn btn-primary" @onclick="Login">Login</button>
        <p>@errorMessage</p>
    </div>
</div>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public void Login()
    {
        Console.WriteLine("Login clicked!");
        // Hardcoded validation
        if (username == "admin" && password == "password")
        {
            // Successful login
            Console.WriteLine("Success");
            errorMessage = "";
            navMan.NavigateTo("/orders");
        }
        else
        {
            // Invalid credentials
            errorMessage = "Invalid username or password. Please try again.";
        }
    }
}
@functions {
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
    }
}