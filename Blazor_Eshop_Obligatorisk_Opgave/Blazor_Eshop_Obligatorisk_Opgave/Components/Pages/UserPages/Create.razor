@page "/users/create"
@inject DBContext DB
@using EshopSharedLibrary.DBStuff
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="User" OnValidSubmit="AddUser" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="User.Email" class="form-control" /> 
                <ValidationMessage For="() => User.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label> 
                <InputText id="password" @bind-Value="User.Password" class="form-control" /> 
                <ValidationMessage For="() => User.Password" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="User.Name" class="form-control" /> 
                <ValidationMessage For="() => User.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">Lastname:</label> 
                <InputText id="lastname" @bind-Value="User.Lastname" class="form-control" /> 
                <ValidationMessage For="() => User.Lastname" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="adress" class="form-label">Adress:</label> 
                <InputText id="adress" @bind-Value="User.Adress" class="form-control" /> 
                <ValidationMessage For="() => User.Adress" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="zipcode" class="form-label">ZipCode:</label> 
                <InputNumber id="zipcode" @bind-Value="User.ZipCode" class="form-control" /> 
                <ValidationMessage For="() => User.ZipCode" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="city" class="form-label">City:</label> 
                <InputText id="city" @bind-Value="User.City" class="form-control" /> 
                <ValidationMessage For="() => User.City" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isadmin" class="form-label">IsAdmin:</label> 
                <InputCheckbox id="isadmin" @bind-Value="User.IsAdmin" class="form-check-input" /> 
                <ValidationMessage For="() => User.IsAdmin" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/users">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public User User { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddUser()
    {
        DB.User.Add(User);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
